<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SettingsIntensityTheme" xml:space="preserve">
    <value>震度アイコンテーマ</value>
  </data>
  <data name="SettingsWindowTheme" xml:space="preserve">
    <value>ウィンドウテーマ</value>
  </data>
  <data name="SetupWizardBefore" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="SetupWizardEpiloguePageContent" xml:space="preserve">
    <value>これで一通りの初期設定は完了です。

右下の『起動』ボタンからアプリの起動が可能です。  
設定ウィンドウは右上の歯車アイコンのボタンを押すことで開くことができます。  
このウィザードで設定した内容はごく一部で、かなり設定できる項目が多いので、自分好みにカスタマイズしてみてください。

KyoshinEewViewer for ingen はまだまだ開発中です。  
不具合や違和感がある場所がありましたら気軽に作者までお問い合わせください。  
問い合わせ先は設定ウィンドウの一番下のタブに記載があります。

---

## ご利用にあたってのTips
### 音声を鳴らしたい

設定ウィンドウの『音声』タブより可能です。  
`{int}: 最大震度` のような表記がある項目に対しては最大震度などに応じて再生するファイル名を変更することができます。  
`C:\Sound\{int}.wav` のように指定すると震度5弱のときには `C:\Sound\5+.wav` が再生されます。

### 録画などで利用したい

配信や録画で使用する場合、上のタブ部分が邪魔になるかもしれません。  
そういった場合はコマンドラインで引数を指定して起動することで特定のタブのみを表示させる特殊なモードとして起動することができます。(以下はWindowsの例です)

- `KyoshinEewViewer.exe -s 種別` で起動することができます。種別は
    - `kyoshin-monitor` 強震モニタ
    - `earthquake` 地震情報
    - `radar` 雨雲レーダー
  のように指定できます。</value>
    <comment>markdown</comment>
  </data>
  <data name="SetupWizardEpiloguePageTitle" xml:space="preserve">
    <value>さいごに</value>
  </data>
  <data name="SetupWizardNext" xml:space="preserve">
    <value>進む</value>
  </data>
  <data name="SetupWizardRun" xml:space="preserve">
    <value>起動</value>
  </data>
  <data name="SetupWizardSelectThemePagePreviewMapJapan" xml:space="preserve">
    <value>地図(日本国内)</value>
  </data>
  <data name="SetupWizardSelectThemePagePreviewMapOther" xml:space="preserve">
    <value>地図(海外)</value>
  </data>
  <data name="SetupWizardSelectThemePagePreviewNormalDockContent" xml:space="preserve">
    <value>通常ウィジェット中身</value>
  </data>
  <data name="SetupWizardSelectThemePagePreviewNormalDockTitle" xml:space="preserve">
    <value>通常ウィジェット</value>
  </data>
  <data name="SetupWizardSelectThemePagePreviewTitle" xml:space="preserve">
    <value>サンプル</value>
  </data>
  <data name="SetupWizardSelectThemePagePreviewWarningDockContent" xml:space="preserve">
    <value>緊急ウィジェット中身</value>
  </data>
  <data name="SetupWizardSelectThemePagePreviewWarningDockTitle" xml:space="preserve">
    <value>緊急ウィジェット</value>
  </data>
  <data name="SetupWizardSelectThemePageTitle" xml:space="preserve">
    <value>テーマ設定</value>
  </data>
  <data name="SetupWizardSkipAndRun" xml:space="preserve">
    <value>スキップして起動</value>
  </data>
  <data name="SetupWizardWelcomePageFunctionDetail" xml:space="preserve">
    <value>このアプリケーションは

- 強震モニタによるリアルタイム震度
- 強震モニタ･SignalNowProfessional･DM-D.S.S経由での緊急地震速報
- 気象庁HP･DM-D.S.S経由による地震情報

などの受信･表示などを行うことができます。

アプリケーションの利用を始める前に、利用したい機能･外観に合わせてアプリケーションをカスタマイズしてみましょう。

これらの設定はこのウィザードが終了しても設定ウィンドウから再度変更することが可能です。  
お急ぎの方は『スキップして起動』ボタンをご利用ください。</value>
    <comment>markdown</comment>
  </data>
  <data name="SetupWizardWelcomePageTitle" xml:space="preserve">
    <value>KyoshinEewViewer for ingen へようこそ</value>
  </data>
  <data name="SetupWizardWelcomePageTitleAlt" xml:space="preserve">
    <value>KyoshinEewViewer for ingen へよこそう</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ShindoObsPoints" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\ShindoObsPoints.mpk.lz4;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="StetupWizardDmdataPromotionContent" xml:space="preserve">
    <value>## [Project DM-D.S.S](https://dmdata.jp/)とは

WebSocketなどを利用してリアルタイムに地震情報などの配信を行うサービスです。(有料)  
KyoshinEewViewer for ingen ではデフォルトの状態で[防災情報XML(PULL型)](http://xml.kishou.go.jp/xmlpull.html)を使用して地震情報の受信を行いますが、この方法では発表から受信までに**1～3分程度**ラグが発生します。  
そこを DM-D.S.S を使用することで**数秒程度**に抑えることができ、テレビや企業が提供しているアプリと同等もしくはそれ以上の速度で情報の受信が可能になります。

## 価格

|区分|価格(月最大)|価格(日割り)|
|---|---|
|緊急地震（予報）|1650円/月|75円/日|
|緊急地震（警報）|440円/月|20円/日|
|地震・津波関連|550円/月|25円/日|

(2022年7月時点/このソフトで使用可能なもののみ)

ご利用の際はアカウント登録･契約の上アプリ起動後、設定ウィンドウの『DM-D.S.S』タブよりアカウント連携をお願いします。</value>
    <comment>markdown</comment>
  </data>
  <data name="StetupWizardDmdataPromotionTitle" xml:space="preserve">
    <value>Project DM-D.S.S のご紹介</value>
  </data>
  <data name="StetupWizardWindowTitle" xml:space="preserve">
    <value>セットアップウィザード</value>
  </data>
  <data name="tjma2001" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\tjma2001.mpk.lz4;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
</root>